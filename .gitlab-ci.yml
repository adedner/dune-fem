---
variables:
  DUNECI_OPTS: "/builds/dune-fem/dune-fem/scripts/opts/ci-gcc.opts"
  TORTURE_TESTS: "off"

before_script:
  - rm -rf /duneci/modules/dune-common
  - rm -rf /duneci/modules/dune-geometry
  - rm -rf /duneci/modules/dune-grid
  - rm -rf /duneci/modules/dune-istl
  - rm -rf /duneci/modules/dune-alugrid
  - duneci-install-module https://gitlab.dune-project.org/core/dune-common.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-geometry.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-grid.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-istl.git
  - duneci-install-module https://gitlab.dune-project.org/extensions/dune-alugrid.git

.base: &base
  stage: test
  when: always
  #  tags:
  #  - "stuttgart"

# FEM_REQUIRE_PETSC=force is intended to trigger an error during cmake
# configuration if PETSc is not found
.base-petsc: &base-petsc
  <<: *base
  variables:
    FEM_REQUIRE_PETSC: "force"

# FEM_REQUIRE_PETSC=disable is intended force PETSc to not being found
.base-nopetsc: &base-nopetsc
  <<: *base
  variables:
    FEM_REQUIRE_PETSC: "disable"

# available image tags,
# debian-9-gcc-6-14
# debian-10-gcc-7-14
# debian-10-gcc-8-17
# debian-10-gcc-8-noassert-17
# debian-10-clang-6-libcpp-17 <-- this one does not seem to work
# ubuntu-18.04-clang-6-17
#
# We reserve some jobs for the nightly build. The Gitlab-schedule for
# the nightly build will also set the environment variable
# TORTURE_TESTS=on

#ubuntu-18.04-clang-6-17:
#  <<: *base-petsc
#  image: dune-fem-ci:git-ubuntu-18.04-clang-6-17
#  script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-gcc7.opts

debian-11-gcc-10-17:
  image: duneci/debian:11
  script:
    # - source /duneci/modules/dune-pip/bin/activate
      # issue with setup-dunepy: dune-fem-dg not yet build so dependency in dune-fem-dg fails
      # - python /duneci/modules/dune-python/bin/setup-dunepy.py --opts=$CI_PROJECT_DIR/scripts/opts/ci-gcc.opts install
    - duneci-standard-test
  variables:
    DUNECI_TOOLCHAIN:  gcc-10-17
    # DUNE_LOG_FORMAT:   '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    # DUNE_LOG_LEVEL:    DEBUG
    # MAKEFLAGS:         "--verbose --output-sync=target --print-directory"


ubuntu-20.04-gcc-9-17:
  image: duneci/ubuntu-20.04
  script:
    # - source /duneci/modules/dune-pip/bin/activate
      # issue with setup-dunepy: dune-fem-dg not yet build so dependency in dune-fem-dg fails
      # - python /duneci/modules/dune-python/bin/setup-dunepy.py --opts=$CI_PROJECT_DIR/scripts/opts/ci-gcc.opts install
    - duneci-standard-test
  variables:
    DUNECI_TOOLCHAIN:  gcc-9-17
    # DUNE_LOG_FORMAT:   '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    # DUNE_LOG_LEVEL:    DEBUG
    # MAKEFLAGS:         "--verbose --output-sync=target --print-directory"


    #debian-10-gcc-8-17:
    #<<: *base-petsc
  #image: dune-fem-ci:git-debian-10-gcc-8-17

    #script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-gcc.opts

    #debian-10-gcc-8-noassert-17:
    #<<: *base-petsc
    #image: dune-fem-ci:git-debian-10-gcc-8-noassert-17
    #script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-gcc.opts
    #only:
    #- triggers
    #- schedules

# This fails, have to further investigate what this libcpp really means.
# is no longer maintained by Heidelberg
#.debian-10-clang-6-libcpp-17:
#  <<: *base-petsc
#  image: dune-fem-ci:git-debian-10-clang-6-libcpp-17
#  script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-clang-6.opts
#  only:
#   - triggers
#   - schedules

      #ubuntu-18.04-clang-6-17:
      #  <<: *base-petsc
      #  image: dune-fem-ci:git-ubuntu-18.04-clang-6-17
      #  script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-clang.opts

####################### REQUIRE_PETSc=disable versions ########################
#
# We only test Debian 10 as we basically only want to test whether the
# build-system successfully has disabled the PETSc bindings.

    #debian-10-gcc-8-17-nopetsc:
    #<<: *base-nopetsc
    #image: dune-fem-ci:git-debian-10-gcc-8-17
    #script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-gcc.opts

    #debian-10-gcc-8-17-petsc:
    #<<: *base-nopetsc
    #image: dune-fem-ci:git-debian-10-gcc-8-17
    #script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-gcc.opts
    #only:
    #- triggers
    #- schedules

    #debian-10-gcc-8-noassert-17-nopetsc:
    #<<: *base-nopetsc
    #image: dune-fem-ci:git-debian-10-gcc-8-noassert-17
    #script: duneci-standard-test --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-gcc.opts
    #only:
    #- triggers
    #- schedules

    #headercheck:
    #<<: *base-petsc
    #stage: test
    #image: dune-fem-ci:git-ubuntu-18.04-clang-6-17
    #script:
    #- cd /builds/dune-fem
    #- dunecontrol --opts=/builds/dune-fem/dune-fem/scripts/opts/ci-headercheck.opts --only=dune-fem configure
    #- cd dune-fem/build-cmake
    #- make headercheck
    #when: always
    #only:
    #- schedules
